class Solution {
public:
    bool isnum(string s)
    {
            int i=0;
            if(s[0]=='-')
                    i++;
            for(;i<s.length();i++)
            {
                    if(isdigit(s[i])==false)
                            return false;
            }
            return true;
    }
    int calPoints(vector<string>& ops) {
        vector<int> s;
        int ans=0;
            string plus(1,'+');
            string d(1,'D');
            string c(1,'C');
            
        for(int i=0;i<ops.size();i++)
        {

            if(isnum(ops[i]))
            {
                int a= stoi(ops[i]);
                s.push_back(a);
                ans += a;
            }
            else
            if(ops[i]==plus)
            {
                int a = s[s.size()-1] +s[s.size()-2];
                    s.push_back(a);
                    ans += a;
            }
            else
                
            if(ops[i]==d)
            {
                    int a = 2* s[s.size()-1];
                      s.push_back(a);
                    ans += a;
              }
            else
                
            if(ops[i]==c)
            {
                ans -= s[s.size()-1];
                s.pop_back();
             }
            cout<<ans<<endl;
        }
            return ans;
    }
};
